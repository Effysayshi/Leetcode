class Solution {
public:
    string longestPalindrome(string s) {
        int len = 0; // to store the longest length
        int l = 0, r = 0; // left and right as the boundry of the longest substring

        
        for(int i = 0; i < s.size(); i++)
        {
            int len1 = expandAroundCenter(s, i, i + 1 );
            int len2 = expandAroundCenter(s, i, i );
            int maxLen = max(len1, len2);
            if (maxLen > len ){
                l = i - (maxLen - 1)/2;
                r = i + maxLen/2;
                len = maxLen;
            }
            
        }
        return s.substr(l, len);
    }
    
    int expandAroundCenter(string s, int i, int j) {
        while( i >= 0 && j < s.size() && s[i] == s[j])
        {
            i--;
            j++;
        }
        return j - i - 1;
    }
};
